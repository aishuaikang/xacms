// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"xacms/internal/pkg/config"
	"xacms/internal/pkg/database"
	"xacms/internal/routes"
	"xacms/internal/server"
	"xacms/internal/services"
	"xacms/internal/store"
	"xacms/internal/utils"
)

// Injectors from injector.go:

func wireRouter(ctx context.Context, cfg *config.Config, server2 *server.FiberServer, validator *utils.ValidationMiddleware) *routes.Router {
	db := database.NewDB(cfg)
	commonService := services.NewCommonService(db, validator, server2)
	userService := services.NewUserService(db, commonService)
	userHandler := &routes.UserHandler{
		UserService:   userService,
		CommonService: commonService,
	}
	menuService := services.NewMenuService(db, commonService, server2)
	menuHandler := &routes.MenuHandler{
		CommonService: commonService,
		MenuService:   menuService,
	}
	roleService := services.NewRoleService(db, commonService)
	roleHandler := &routes.RoleHandler{
		RoleService:   roleService,
		CommonService: commonService,
	}
	deviceService := services.NewDeviceService(db, commonService)
	commonStore := store.NewCommonStore(ctx)
	deviceStore := store.NewDeviceStore(ctx, deviceService, commonStore)
	fpvStore := store.NewFPVStore(ctx, cfg)
	parseStore := store.NewParseStore(ctx, cfg, commonStore)
	deviceHandler := &routes.DeviceHandler{
		Ctx:           ctx,
		DeviceService: deviceService,
		CommonService: commonService,
		CommonStore:   commonStore,
		DeviceStore:   deviceStore,
		FPVStore:      fpvStore,
		ParseStore:    parseStore,
	}
	router := routes.NewRouter(server2, userHandler, menuHandler, roleHandler, deviceHandler)
	return router
}
